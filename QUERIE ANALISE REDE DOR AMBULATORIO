
----------------------------------BASE AMBULATORIAL PARTE 1---------------------------------------------------------------

-- CRIA A BASE DE SINISTRO FILTRADA PARA O RESTANTE DA ANÁLISE 
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO AS 
SELECT
  DSC_CLASSIFICACAO_SINISTRO
  , DSC_TIPO_SINISTRO
  , FLG_EMERGENCIA
  , FLG_INTERNACAO
  , FLG_LIMINAR
  , NUM_VPP
  , NUM_INTERNACAO
  , DAT_EXECUCAO_SINISTRO
  , DAT_ATENDIMENTO_SINISTRO
  , DAT_PAGAMENTO_SINISTRO
  , DAT_MES_PAGAMENTO_SINISTRO
  , COD_PRODUTO
  , DSC_PRODUTO
  , DSC_CARTEIRA_EMPRESA
  , COD_PLANO
  , NME_PLANO
  , NME_PLANO_AJUSTADO
  , CASE 
      WHEN IDC_TIPO_PLANO IN ('EXATO','EXATO 20','MASTER','GM','MEGA I','EXATO GROB','EXATO MBB','EXATO APT','EXATO APTO','MEGA II','VITA','RDB EXATO','LG EXATO') 
        THEN 'EXATO'
      WHEN IDC_TIPO_PLANO IN 
        (  
           'BASICO','ESTILO I','FIT','ALPHA','MAXI 100','ODONTOLOGICO','ESTILO  I','BASICO 10','COMPACTO','BASICO 20','ODONTO MAIS','BASICO 20 II EMS','BÁSICO 20','BASICO APT','BASICO 10 APT','CLASSICO','CLASSICO 20','ODONTO DOC'
          ,'CLASSICO ENF.','CLASSICO ENF','CLÁSSICO 20','MASTER I','OSWALDOCRUZ100','FUNC SP I','GB CLASSICO','CLASSICO APTO.','CLASSICO APTO','MASTER II','FUNC SP II','RDB CLASSICO','SELECT'
        ) 
        THEN 'BASICO+CLASSICO'
      WHEN IDC_TIPO_PLANO IN 
        (
           'ESPECIAL','ESPECIAL 20','ESTILO II','PRATA','DIAMANTE','BETA','MAXI 200','ESPECIAL 100','ESPECIAL 30','ESPECIAL 100 R1','ESPECIAL 500','MASTER III','MASTER IV','VITA PRO','OSWALDOCRUZ200','GM SUPERIOR','FUNC SP PLUS'
          ,'MEGA R III','GB ESPECIAL','RDB ESPECIAL','LG ESPECIAL'
        )
        THEN 'ESPECIAL'
      WHEN IDC_TIPO_PLANO IN 
      (
         'EXECUTIVO','MAXI 300','OMEGA','PLATINUM','EXECUTIVO 20','EXECUTIVO 20 II - 3X','EXECUTIVO 20 II - 4X','EXECUTIVO 30','EXECUTIVO R1','EXECUTIVO R2','MASTER V','VITA PLUS','OSWALDOCRUZ300','MEGA R IV','GB EXECUTIVO'
        ,'RDB EXECUTIVO','MAXIMO','MAXIMUM','MAXI 400','PRESTIGE','PRESTIGE 20','PRESTIGE PME','GB PRESTIGE','RDB PRESTIGE'
      ) 
        THEN 'EXECUTIVO+PRESTIGE'
      WHEN IDC_TIPO_PLANO IN 
      (
        'DIRETO RIO','DIRETO SAMPA BRANCO','DIRETO ABC','DIRETO CURITIBA','DIRETO CAMPINAS','DIRETO RECIFE AZUL','DIRETO SAMPA AZUL',
        'DIRETO BRASILIA','DIRETO JOAO PESSOA','DIRETO JOINVILLE','DIRETO BELO HORIZONTE','DIRETO RIO AZUL MARIN','DIRETO RIO AZUL ROYAL',
        'DIRETO SAMPA LARANJA','DIRETO RIO PRETO','DIRETO RIBEIRÃO PRETO','DIRETO SALVADOR','DIRETO UBERLANDIA','DIRETO MAIS'
      ) 
        THEN 'DIRETOS'
      -- DEMAIS
      WHEN IDC_TIPO_PLANO IN ('VITAL', 'VITAL APT','EXTRA', 'EXTRA APT', 'EXTRA PRO', 'EXTRA PLUS', 'EXP FUNC DOR','IDEAL') 
        THEN 'DEMAIS'
        ELSE 'NAO CADASTRADO' 
     END                                                                              AS NME_PLANO_AJUSTADO_ATUARIAL
  , COD_ANALITICO_BENEFICIARIO
  , COD_SISTEMICO_BENEFICIARIO
  , DAT_NASCIMENTO_BENEFICIARIO
  , NUM_IDADE_BENEFICIARIO_SINISTRO
  , DSC_FAIXA_ETARIA_BENEFICIARIO
  , DSC_SEXO_BENEFICIARIO
  , DAT_INICIO_VIGENCIA_BENEFICIARIO
  , DAT_FIM_VIGENCIA_BENEFICIARIO
  , SGL_UF_TITULAR_BENEFICIARIO
  , COD_PRESTADOR
  , NUM_IDENTIFICACAO_PRESTADOR
  , NME_FANTASIA_PRESTADOR
  , DSC_RAZAO_SOCIAL_PRESTADOR
  , COD_GRUPO_ECONOMICO_PRESTADOR
  , DSC_GRUPO_ECONOMICO_PRESTADOR
  , DSC_CLASSIFICACAO_PRESTADOR
  , DSC_REGIONAL_PRESTADOR
  , DSC_FILIAL_PRESTADOR
  , SGL_UF_PRESTADOR
  , NME_MUNICIPIO_PRESTADOR
  , NME_REGIAO_SAUDE_PRESTADOR
  , DSC_SERVICO
  , COD_SERVICO
  , DSC_GRUPO_SERVICO
  , DSC_SUBGRUPO_SERVICO
  , COD_GRUPO_ESTATISTICO_SERVICO
  , DSC_GRUPO_ESTATISTICO_SERVICO
  , COD_ORIGEM_SERVICO
  , DSC_ORIGEM_SERVICO
  , COD_CLASSIFICACAO_SERVICO
  , DSC_CLASSIFICACAO_SERVICO
  , FLG_HONORARIO_MEDICO
  , FLG_MATERIAL
  , FLG_MEDICAMENTO
  , QTD_SERVICO_PAGO
  , VLR_APRESENTADO_SERVICO
  , VLR_PAGO_SERVICO
  , FLG_PS
  , DAT_ATENDIMENTO_EFETIVO_SINISTRO
FROM self-service-saude-prd.REF_SAUDE_ESTRATEGIA_SINISTRO.TB_FAT_ITEM_SERVICO_SINISTRO A
LEFT JOIN self-service-saude.UDS_SAUDE_MITIGACAO_PERFORMANCE_FINANCEIRA.CATEGORIA_ATU
  ON NME_PLANO = NME_CATEGORIA
WHERE A.DSC_TIPO_SINISTRO = 'REDE'
AND COD_PRODUTO NOT IN (882, 
883, 
885, 
886, 
887, 
888, 
889, 
890, 
891, 
892
)
AND A.NME_PLANO NOT IN ('250 SENIOR I', 
'252 SENIOR I', 
'245 PLENO II', 
'244 PLENO I',
'175 BASICO', 
'241 PLENO I',
'253 SENIOR II', 
'178 BASICO',
'237 MASTER I',
'251 SENIOR II',
'240 MASTER II',
'243 PLENO II',
'FUNC DF')
;
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
------------------------BASE AMBULATORIAL PARTE 2---------------------------------------------

-- BASE DOMICILIAR
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DOMICILIAR AS 
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'DOMICILIAR' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
WHERE FLG_INTERNACAO = 'N'                                                                        -- TIRA INTERNAÇÃO
  AND (D.COD_PRESTADOR IS NOT NULL OR DSC_SUBGRUPO_SERVICO = 'DOMICILIAR')                        -- CONSIDERA DOMICILIAR
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DOMICILIAR
*/ 

-- BASE PS
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PS AS 
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'PS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
WHERE B.FLG_PS = 'S'                                                                                -- CONSIDERA PS
  AND A.FLG_INTERNACAO = 'N'                                                                        -- TIRA INTERNAÇÃO  
  AND D.COD_PRESTADOR IS NULL                                                                       -- TIRA DOMICILIAR
  AND A.DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                        -- TIRA DOMICILIAR
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PS
*/ 

-- BASE PROCEDIMENTO
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PROCEDIMENTO AS 
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'PROCEDIMENTO' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
WHERE B.FLG_PS = 'N'                                                                              -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'S'                                                                    -- CONSIDERA PROCEDIMENTO
  AND A.FLG_INTERNACAO = 'N'                                                                      -- TIRA INTERNAÇÃO
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                        -- TIRA DOMICILIAR
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PROCEDIMENTO
*/ 

-- QUIMIOTERAPIA
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_QUIMIO AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'QUIMIO' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
WHERE B.FLG_PS = 'N'                                                                            -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                  -- TIRA PROCEDIMENTO  
  AND A.FLG_INTERNACAO = 'N'                                                                    -- TIRA INTERNAÇÃO
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                      -- TIRA DOMICILIAR
  AND Q.NUM_VPP IS NOT NULL                                                                     -- CONSIDERA QUIMIO
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_QUIMIO
*/ 

-- RADIOTERAPIA
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO AS 
WITH BASE_1 AS (
  SELECT 
    COD_SERVICO
    , DSC_SERVICO_COMPLETA
    , DSC_GRUPO_ESTATISTICO
    , DSC_SUB_GRUPO_SERVICO
    , DSC_GRUPO_SERVICO
    , DSC_SUB_GRUPO_SERVICO_AMB
    , DSC_GRUPO_SERVICO_AMB
    , DSC_CAPITULO_SERVICO_AMB 
  FROM `self-service-saude-prd.REF_SAUDE_SERVICO.TB_CAD_SERVICO` 
  WHERE DSC_SUB_GRUPO_SERVICO = 'RADIOTERAPIA' OR COD_SERVICO = 35800640
    OR DSC_GRUPO_ESTATISTICO = 'RADIOTERAPIA' OR DSC_SERVICO_COMPLETA LIKE '%RADIOTERAPIA%' 
    OR DSC_SERVICO_COMPLETA LIKE '%BRAQUITERAPIA%' OR DSC_SERVICO_COMPLETA LIKE '%TELETERAPIA%' 
    OR DSC_SERVICO_COMPLETA LIKE '%RADIOCIRURGIA %' OR DSC_SERVICO_COMPLETA LIKE '%RADIOIMPLANTE%' 
    OR DSC_SERVICO_COMPLETA LIKE '%IODO 125%' OR DSC_SERVICO_COMPLETA LIKE '%RADIO 223%' OR DSC_SERVICO_COMPLETA LIKE '%BETATERAPIA%' 
    OR DSC_SERVICO_COMPLETA LIKE '%RADITERAPIA%' 
    OR DSC_SUB_GRUPO_SERVICO_AMB = 'RADIOTERAPIA CLINICA (APLICACAO)' 
    OR DSC_GRUPO_SERVICO_AMB = 'RADIOTERAPIA' 
    OR COD_SERVICO = 35800569 
    OR COD_SERVICO = 64617629
    OR COD_SERVICO = 64613569
)
, BASE_2 AS (
  SELECT 
    * 
  FROM BASE_1 
  WHERE DSC_SERVICO_COMPLETA NOT LIKE '%IODOTERAPIA%' 
  AND DSC_GRUPO_SERVICO NOT IN ('CONSULTA','DIAGNOSE','DIARIAS','TAXA','TAXA DE SALA') 
  AND DSC_GRUPO_ESTATISTICO != 'TAXA DE USO DE EQUIPAMENTO'
)
, BASE_3 AS (
  SELECT DISTINCT 
    COD_SERVICO 
  FROM `self-service-saude.OW_LAND_SAU_PRD.PAC_SERV_PRINCIPAL` 
  WHERE COD_SERV_PRINCIPAL IN (SELECT COD_SERVICO FROM BASE_2)
)
, BASE_4 AS (
  SELECT 
    COD_SERVICO
    , DSC_SERVICO_COMPLETA
    , DSC_GRUPO_ESTATISTICO
    , DSC_SUB_GRUPO_SERVICO
    , DSC_GRUPO_SERVICO
    , DSC_SUB_GRUPO_SERVICO_AMB
    , DSC_GRUPO_SERVICO_AMB
    , DSC_CAPITULO_SERVICO_AMB 
  FROM `self-service-saude.REF_SAUDE_SERVICO.TB_CAD_SERVICO` 
  WHERE COD_SERVICO IN (SELECT COD_SERVICO FROM BASE_3) AND DSC_SERVICO_COMPLETA NOT LIKE '%IODOTERAPIA%' 
  AND DSC_GRUPO_ESTATISTICO != 'TAXA DE USO DE EQUIPAMENTO' 
)
, BASE_5 AS (
  SELECT * FROM BASE_2
  UNION ALL
  SELECT * FROM BASE_4
)
SELECT DISTINCT 
  * 
FROM BASE_5 
WHERE DSC_SERVICO_COMPLETA NOT LIKE '%QUIMIOTERAPIA%'
AND COD_SERVICO NOT IN (
  64619346,
  64619354,
  64619362,
  64619370,
  64619389,
  64621014,
  64623025,
  64623033,
  64623041,
  64623050,
  96022779,
  96022620
  )
ORDER BY 6,7
;

CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_RADIO AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'RADIO' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                          -- TIRA PS
  AND FLG_PROCEDIMENTO = 'N'                                                                  -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                    -- TIRA INTERNAÇÃO 
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                    -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                       -- TIRA QUIMIO
  AND R.COD_SERVICO IS NOT NULL                                                               -- CONSIDERA RADIO
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_RADIO
*/ 


-- BASE HEMODIALISE 
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_HEMODIALISE AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'HEMODIALISE' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                        -- TIRA PS
  AND FLG_PROCEDIMENTO = 'N'                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                  -- TIRA INTERNAÇÃO
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                  -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                     -- TIRA QUIMIO  
  AND R.COD_SERVICO IS NULL                                                                 -- TIRA RADIO 
  AND FLG_TERAPIA_HEMODIALISE = 'S'                                                         -- CONSIDERA HEMODIALISE
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'   
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_HEMODIALISE
*/ 

-- BASE DEMAIS TERAPIAS MÉDICAS
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DEMAIS_TERAPIAS_MEDICAS AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'DEMAIS TERAPIAS MÉDICAS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                        -- TIRA PS 
  AND FLG_PROCEDIMENTO = 'N'                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                  -- TIRA INTERNAÇÃO 
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                  -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                     -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                 -- TIRA RADIO
  AND FLG_TERAPIA_HEMODIALISE = 'N'                                                         -- TIRA HEMODIALISE
  AND (FLG_TERAPIA_DIALISE ='S' OR FLG_TERAPIA_HEMOTERAPIA = 'S')                           -- CONSIDERA DIALISE E HEMOTERAPIA
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DEMAIS_TERAPIAS_MEDICAS
*/ 

-- BASE TERAPIAS NÃO MÉDICAS
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TERAPIAS_N_MEDICAS2 AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT

  A.DSC_FAIXA_ETARIA_BENEFICIARIO,
  A.DSC_CLASSIFICACAO_PRESTADOR,
  A.SGL_UF_PRESTADOR,

  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'TERAPIAS NÃO MÉDICAS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                        -- TIRA PS 
  AND FLG_PROCEDIMENTO = 'N'                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                  -- TIRA INTERNAÇÃO 
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                  -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                     -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                 -- TIRA RADIO
  AND FLG_TERAPIA_HEMODIALISE = 'N'                                                         -- TIRA HEMODIALISE
  AND FLG_TERAPIA_DIALISE ='N' 
  AND FLG_TERAPIA_HEMOTERAPIA = 'N'                                                          -- TIRA DIALISE E HEMOTERAPIA
  AND (A.COD_SERVICO = 31601014                                                               -- CONSIDERA TERAPIAS NÃO MÉDICAS
        OR A.DSC_GRUPO_SERVICO = 'TERAPIA' 
        OR (A.DSC_GRUPO_SERVICO = 'PACOTE' AND A.DSC_SUBGRUPO_SERVICO IN ('TERAPIA COM HM','TERAPIA SEM HM'))
        OR (A.DSC_GRUPO_SERVICO = 'PACOTE' AND A.DSC_SUBGRUPO_SERVICO = 'PROJETOS DAS AREAS' 
            AND A.COD_SERVICO IN (SELECT COD_SERVICO FROM `self-service-saude.SANDBOX_GERAC.TB_LISTA_CLASSIFICACAO_SERVICO_REAJUSTE_MASSIFICADOS` 
                                                    WHERE CLASSF_FINAL_SIMULADOR LIKE '%TERAPIA%')
          )
      )
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TERAPIAS_N_MEDICAS
*/ 

-- CÓDIGOS TERAPIAS NÃO MÉDICAS 
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS AS
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT DISTINCT 
  A.COD_SERVICO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                        -- TIRA PS 
  AND FLG_PROCEDIMENTO = 'N'                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                  -- TIRA INTERNAÇÃO 
  AND (D.COD_PRESTADOR IS NULL AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR')                     -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                     -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                 -- TIRA RADIO
  AND FLG_TERAPIA_HEMODIALISE = 'N'                                                         -- TIRA HEMODIALISE
  AND FLG_TERAPIA_DIALISE ='N' 
  and FLG_TERAPIA_HEMOTERAPIA = 'N'                                                          -- TIRA DIALISE E HEMOTERAPIA
  AND (A.COD_SERVICO = 31601014                                                               -- CONSIDERA TERAPIAS NÃO MÉDICAS
        OR A.DSC_GRUPO_SERVICO = 'TERAPIA' 
        OR (A.DSC_GRUPO_SERVICO = 'PACOTE' AND A.DSC_SUBGRUPO_SERVICO IN ('TERAPIA COM HM','TERAPIA SEM HM'))
        OR (A.DSC_GRUPO_SERVICO = 'PACOTE' AND A.DSC_SUBGRUPO_SERVICO = 'PROJETOS DAS AREAS' 
            AND A.COD_SERVICO IN (SELECT COD_SERVICO FROM `self-service-saude.SANDBOX_GERAC.TB_LISTA_CLASSIFICACAO_SERVICO_REAJUSTE_MASSIFICADOS` 
                                                    WHERE CLASSF_FINAL_SIMULADOR LIKE '%TERAPIA%')
          )
      )
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
;

-- BASE EXAMES
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_EXAMES AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT
  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'EXAMES' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS NM
  ON A.COD_SERVICO = NM.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                                                -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                                      -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                                          -- TIRA INTERNAÇÃO
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                                          -- TIRA DOMICILIAR 
  AND Q.NUM_VPP IS NULL                                                                                             -- TIRA QUIMIO  
  AND R.COD_SERVICO IS NULL                                                                                         -- TIRA RADIO
  AND B.FLG_TERAPIA_DIALISE = 'N'                                                                                   -- TIRA DIALISE
  AND B.FLG_TERAPIA_HEMOTERAPIA = 'N'                                                                               -- TIRA HEMOTERAPIA
  AND B.FLG_TERAPIA_HEMODIALISE = 'N'                                                                               -- TIRA HEMODIALISE
  AND NM.COD_SERVICO IS NULL                                                                                        -- TIRA TERAPIAS NÃO MÉDICAS
  AND (A.DSC_GRUPO_SERVICO = 'DIAGNOSE' OR A.DSC_SUBGRUPO_SERVICO IN ('DIAGNOSE COM HM', 'DIAGNOSE SEM HM'))        -- CONSIDERA EXAMES
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_EXAMES
*/ 

-- BASE CONSULTAS
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_CONSULTAS2 AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT

A.DSC_FAIXA_ETARIA_BENEFICIARIO,
  A.DSC_CLASSIFICACAO_PRESTADOR,
  A.SGL_UF_PRESTADOR,

  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'CONSULTAS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS NM
  ON A.COD_SERVICO = NM.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                                                                          -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                                                                    -- TIRA INTERNAÇÃO
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                                                                                    -- TIRA DOMICILIAR
  AND Q.NUM_VPP IS NULL                                                                                                                       -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                                                                   -- TIRA RADIO
  AND B.FLG_TERAPIA_DIALISE = 'N'                                                                                                             -- TIRA DIALISE
  AND B.FLG_TERAPIA_HEMOTERAPIA = 'N'                                                                                                         -- TIRA HEMOTERAPIA
  AND B.FLG_TERAPIA_HEMODIALISE = 'N'                                                                                                         -- TIRA HEMODIALISE
  AND A.DSC_GRUPO_SERVICO != 'DIAGNOSE' 
  AND A.DSC_SUBGRUPO_SERVICO NOT IN ('DIAGNOSE COM HM', 'DIAGNOSE SEM HM')                             -- TIRA EXAMES
  AND NM.COD_SERVICO IS NULL                                                                                                                  -- TIRA TERAPIAS NÃO MÉDICAS
  AND (DSC_SUBGRUPO_SERVICO IN ('NORMAL', 'ATENDIMENTO OU CONSULTA')                                                                          -- CONSIDERA CONSULTAS
        OR (UPPER(TRIM(DSC_SUBGRUPO_SERVICO)) IN ('PROGRAMAS SUGSP', 'PROJETOS DAS AREAS') AND DSC_SERVICO LIKE '%CONSULTA%')                 
        OR (UPPER(TRIM(DSC_SUBGRUPO_SERVICO)) IN ('PROGRAMAS SUGSP', 'PROJETOS DAS AREAS') AND DSC_SERVICO LIKE '%ATENDIMENTO%')
      )
  AND DSC_SERVICO NOT LIKE '%FISIOT%' 
  AND DSC_SERVICO NOT LIKE '%DOMI%' 
  AND DSC_SERVICO NOT LIKE '%NUTRI%' 
  AND DSC_SERVICO NOT LIKE '%FONO%' 
  AND DSC_SERVICO NOT LIKE '%PRONTO SOCORRO%' 
  AND DSC_SERVICO NOT LIKE '%PS %' 
  AND DSC_SERVICO NOT LIKE '%EMERGENCIA%' 
  AND A.COD_SERVICO NOT IN (64624056,64624064,64623513,64623580,64624650) 
  AND DSC_SERVICO NOT LIKE '%CAPITATION%'
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
;

/*
SELECT DISTINCT 
  NME_PLANO_AJUSTADO
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_CONSULTAS
*/ 

-- CÓDIGOS CONSULTA 
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_CODIGOS_CONSULTAS AS
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT DISTINCT 
  A.COD_SERVICO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS NM
  ON A.COD_SERVICO = NM.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                                                                          -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                                                                -- TIRA PROCEDIMENTO
  AND FLG_INTERNACAO = 'N'                                                                                                                    -- TIRA INTERNAÇÃO
  AND (D.COD_PRESTADOR IS NULL AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR')                                                                       -- TIRA DOMICILIAR
  AND Q.NUM_VPP IS NULL                                                                                                                       -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                                                                   -- TIRA RADIO
  AND B.FLG_TERAPIA_DIALISE = 'N'                                                                                                             -- TIRA DIALISE
  AND B.FLG_TERAPIA_HEMOTERAPIA = 'N'                                                                                                         -- TIRA HEMOTERAPIA
  AND B.FLG_TERAPIA_HEMODIALISE = 'N'                                                                                                         -- TIRA HEMODIALISE
  AND A.DSC_GRUPO_SERVICO != 'DIAGNOSE' 
  AND A.DSC_SUBGRUPO_SERVICO NOT IN ('DIAGNOSE COM HM', 'DIAGNOSE SEM HM')                             -- TIRA EXAMES
  AND NM.COD_SERVICO IS NULL                                                                                                                  -- TIRA TERAPIAS NÃO MÉDICAS
  AND (DSC_SUBGRUPO_SERVICO IN ('NORMAL', 'ATENDIMENTO OU CONSULTA')                                                                          -- CONSIDERA CONSULTAS
        OR (UPPER(TRIM(DSC_SUBGRUPO_SERVICO)) IN ('PROGRAMAS SUGSP', 'PROJETOS DAS AREAS') AND DSC_SERVICO LIKE '%CONSULTA%')                 
        OR (UPPER(TRIM(DSC_SUBGRUPO_SERVICO)) IN ('PROGRAMAS SUGSP', 'PROJETOS DAS AREAS') AND DSC_SERVICO LIKE '%ATENDIMENTO%')
      )
  AND DSC_SERVICO NOT LIKE '%FISIOT%' 
  AND DSC_SERVICO NOT LIKE '%DOMI%' 
  AND DSC_SERVICO NOT LIKE '%NUTRI%' 
  AND DSC_SERVICO NOT LIKE '%FONO%' 
  AND DSC_SERVICO NOT LIKE '%PRONTO SOCORRO%' 
  AND DSC_SERVICO NOT LIKE '%PS %' 
  AND DSC_SERVICO NOT LIKE '%EMERGENCIA%' 
  AND A.COD_SERVICO NOT IN (64624056,64624064,64623513,64623580,64624650) 
  AND DSC_SERVICO NOT LIKE '%CAPITATION%'
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
;


-- BASE MEDICAMENTOS
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_MEDICAMENTOS2 AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT

A.DSC_FAIXA_ETARIA_BENEFICIARIO,
  A.DSC_CLASSIFICACAO_PRESTADOR,
  A.SGL_UF_PRESTADOR,

  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'MEDICAMENTOS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_CONSULTAS C
  ON A.COD_SERVICO = C.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS NM
  ON A.COD_SERVICO = NM.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                                                  -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                                        -- TIRA PROCEDIMENTO 
  AND A.FLG_INTERNACAO = 'N'                                                                                          -- TIRA INTERNAÇÕES
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                               -- TIRA DOMICILIAR  
  AND Q.NUM_VPP IS NULL                                                                                               -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                                           -- TIRA RADIO
  AND B.FLG_TERAPIA_DIALISE = 'N'                                                                                     -- TIRA DIALISE
  AND B.FLG_TERAPIA_HEMOTERAPIA = 'N'                                                                                 -- TIRA HEMOTERAPIA
  AND B.FLG_TERAPIA_HEMODIALISE = 'N'                                                                                 -- TIRA HEMODIALISE
  AND A.DSC_GRUPO_SERVICO != 'DIAGNOSE' 
  AND A.DSC_SUBGRUPO_SERVICO NOT IN ('DIAGNOSE COM HM', 'DIAGNOSE SEM HM')     -- TIRA EXAMES  
  AND C.COD_SERVICO IS NULL                                                                                           -- TIRA CONSULTA
  AND NM.COD_SERVICO IS NULL                                                                                          -- TIRA TERAPIAS NÃO MÉDICAS
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_GRUPO_SERVICO = 'MEDICAMENTO'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
;

-- BASE OUTROS AMBULATORIO
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_OUTROS_AMB2 AS 
WITH SOLIC_QUIMIO AS (
  SELECT DISTINCT 
    NUM_VPP
  FROM `self-service-saude-prd.TRU_SAUDE_PROVPP.SOLIC_QUIMIOTERAPIA`
)
SELECT

A.DSC_FAIXA_ETARIA_BENEFICIARIO,
  A.DSC_CLASSIFICACAO_PRESTADOR,
  A.SGL_UF_PRESTADOR,

  FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO
  , FORMAT_DATE('%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS MES
  , FORMAT_DATE('%Y%m', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) AS ANO_MES
  , 'OUTROS' AS BASE
  , A.COD_ANALITICO_BENEFICIARIO
  , A.NME_FANTASIA_PRESTADOR
  , A.DSC_GRUPO_ECONOMICO_PRESTADOR
  , A.DSC_CARTEIRA_EMPRESA
  , P.NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , COUNT(DISTINCT CONCAT(A.COD_ANALITICO_BENEFICIARIO, A.DAT_ATENDIMENTO_EFETIVO_SINISTRO)) AS TOTAL_QTD_ATENDIMENTO
  , SUM(QTD_SERVICO_PAGO) AS TOTAL_QTD_SERVICO
  , SUM(A.VLR_PAGO_SERVICO) AS TOTAL_SINISTRO
FROM SANDBOX_GERAC.LT_BASE_SINISTRO_REDE_SEM_SOMPO A 
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_FAT_NAO_INTERNACAO` B 
  ON B.COD_ANALITICO_BENEFICIARIO = A.COD_ANALITICO_BENEFICIARIO 
  AND B.DAT_ATENDIMENTO_EFETIVO_SINISTRO = A.DAT_ATENDIMENTO_EFETIVO_SINISTRO
LEFT JOIN `self-service-saude.TRU_SAUDE_CONTROLE_PRECO_SINISTRO_PRD.TB_ESP_PRESTADOR_DOMICILIAR` D
  ON A.COD_PRESTADOR = D.COD_PRESTADOR
LEFT JOIN `self-service-saude.SANDBOX_GERAC.LT_TB_PLANO_AJUSTADO_CAPITATION` P
  ON A.NME_PLANO = P.NME_PLANO
LEFT JOIN SOLIC_QUIMIO Q
  ON A.NUM_VPP = Q.NUM_VPP
LEFT JOIN SANDBOX_GERAC.LT_ONCO_CODIGOS_RADIO R
  ON A.COD_SERVICO = R.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_CONSULTAS C
  ON A.COD_SERVICO = C.COD_SERVICO
LEFT JOIN SANDBOX_GERAC.LT_CODIGOS_TERAPIAS_N_MEDICAS NM
  ON A.COD_SERVICO = NM.COD_SERVICO
WHERE B.FLG_PS = 'N'                                                                                                  -- TIRA PS
  AND B.FLG_PROCEDIMENTO = 'N'                                                                                        -- TIRA PROCEDIMENTO 
  AND A.FLG_INTERNACAO = 'N'                                                                                          -- TIRA INTERNAÇÕES
  AND D.COD_PRESTADOR IS NULL 
  AND DSC_SUBGRUPO_SERVICO != 'DOMICILIAR'                                               -- TIRA DOMICILIAR  
  AND Q.NUM_VPP IS NULL                                                                                               -- TIRA QUIMIO
  AND R.COD_SERVICO IS NULL                                                                                           -- TIRA RADIO
  AND B.FLG_TERAPIA_DIALISE = 'N'                                                                                     -- TIRA DIALISE
  AND B.FLG_TERAPIA_HEMOTERAPIA = 'N'                                                                                 -- TIRA HEMOTERAPIA
  AND B.FLG_TERAPIA_HEMODIALISE = 'N'                                                                                 -- TIRA HEMODIALISE
  AND A.DSC_GRUPO_SERVICO != 'DIAGNOSE' 
  AND A.DSC_SUBGRUPO_SERVICO NOT IN ('DIAGNOSE COM HM', 'DIAGNOSE SEM HM')     -- TIRA EXAMES  
  AND C.COD_SERVICO IS NULL                                                                                           -- TIRA CONSULTA
  AND NM.COD_SERVICO IS NULL                                                                                          -- TIRA TERAPIAS NÃO MÉDICAS
  AND FORMAT_DATE('%Y', A.DAT_ATENDIMENTO_EFETIVO_SINISTRO) >= '2018'
  AND A.DSC_GRUPO_SERVICO != 'MEDICAMENTO'
  AND A.DSC_TIPO_SINISTRO = 'REDE'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
;

----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
------------------------BASE AMBULATORIAL PARTE 3---------------------------------------------


-- BASE TOTAL
CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TOTAL_ANALISE_DOR2 AS 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DOMICILIAR2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PS2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_PROCEDIMENTO2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_QUIMIO2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_RADIO2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_HEMODIALISE2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_DEMAIS_TERAPIAS_MEDICAS2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TERAPIAS_N_MEDICAS2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_EXAMES2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_CONSULTAS2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_MEDICAMENTOS2
UNION ALL 
SELECT 
  *
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_OUTROS_AMB2
;

----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
--CRIA BASE AMBULATORIAL COM OS CALCULOS DE VARIAÇÃO PARA USAR NO PAINEL DO DATA STUDIO----------------

CREATE OR REPLACE TABLE SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TOTAL_ANALISE_DOR_DATASTUDIO AS

WITH TABELA2 AS 
(
  WITH TABELA1 AS   
    (
    #PRIMEIRO SELECT, CRIA O CAMPO QTDE_ATENDIMENTO, QUE É A JUNÇÃO DE TOTAL_QTD_ATENDIMENTO E TOTAL_QTD_SERVICO
    SELECT
    DSC_FAIXA_ETARIA_BENEFICIARIO,
    DSC_CLASSIFICACAO_PRESTADOR,
    SGL_UF_PRESTADOR,
    ANO
  , MES
  , ANO_MES
  , BASE 
  , DSC_CARTEIRA_EMPRESA
  , NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL
  , SUM(CASE WHEN BASE IN ('EXAMES', 'CONSULTAS', 'TERAPIAS NÃO MÉDICAS') THEN TOTAL_QTD_SERVICO 
        ELSE             
        TOTAL_QTD_ATENDIMENTO END) 
        AS TOTAL_QUANTIDADE,
    SUM(TOTAL_SINISTRO) AS TOTAL_SINISTRO,
    COUNT(DISTINCT COD_ANALITICO_BENEFICIARIO) 
      AS TOTAL_SINISTRADOS
FROM SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TOTAL_ANALISE_DOR2
GROUP BY 1,2,3,4,5,6,7,8,9,10
    )

#SEGUNDO SELECT, CRIA AS COLUNAS SE SOMA POR ANO PARA USAR NO DATA STUDIO
SELECT 
 DSC_FAIXA_ETARIA_BENEFICIARIO,
    DSC_CLASSIFICACAO_PRESTADOR,
    SGL_UF_PRESTADOR,
   ANO
  , MES
  , ANO_MES
  , BASE 
  , DSC_CARTEIRA_EMPRESA
  , NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL,
#TOTAL_SINISTRO
CASE WHEN ANO = '2018' THEN TOTAL_SINISTRO ELSE 0 END AS TOTAL_SINISTRO_2018,
CASE WHEN ANO = '2019' THEN TOTAL_SINISTRO ELSE 0 END AS TOTAL_SINISTRO_2019,
CASE WHEN ANO = '2020' THEN TOTAL_SINISTRO ELSE 0 END AS TOTAL_SINISTRO_2020,
CASE WHEN ANO = '2021' THEN TOTAL_SINISTRO ELSE 0 END AS TOTAL_SINISTRO_2021,
CASE WHEN ANO = '2022' THEN TOTAL_SINISTRO ELSE 0 END AS TOTAL_SINISTRO_2022,

#TOTAL_QUANTIDADE
CASE WHEN ANO = '2018' THEN TOTAL_QUANTIDADE ELSE 0 END AS TOTAL_QUANTIDADE_2018,
CASE WHEN ANO = '2019' THEN TOTAL_QUANTIDADE ELSE 0 END AS TOTAL_QUANTIDADE_2019,
CASE WHEN ANO = '2020' THEN TOTAL_QUANTIDADE ELSE 0 END AS TOTAL_QUANTIDADE_2020,
CASE WHEN ANO = '2021' THEN TOTAL_QUANTIDADE ELSE 0 END AS TOTAL_QUANTIDADE_2021,
CASE WHEN ANO = '2022' THEN TOTAL_QUANTIDADE ELSE 0 END AS TOTAL_QUANTIDADE_2022,

#TOTAL_SINISTRADOS
CASE WHEN ANO = '2018' THEN TOTAL_SINISTRADOS ELSE 0 END AS TOTAL_SINISTRADOS_2018,
CASE WHEN ANO = '2019' THEN TOTAL_SINISTRADOS ELSE 0 END AS TOTAL_SINISTRADOS_2019,
CASE WHEN ANO = '2020' THEN TOTAL_SINISTRADOS ELSE 0 END AS TOTAL_SINISTRADOS_2020,
CASE WHEN ANO = '2021' THEN TOTAL_SINISTRADOS ELSE 0 END AS TOTAL_SINISTRADOS_2021,
CASE WHEN ANO = '2022' THEN TOTAL_SINISTRADOS ELSE 0 END AS TOTAL_SINISTRADOS_2022,


FROM TABELA1
)

SELECT 
 DSC_FAIXA_ETARIA_BENEFICIARIO,
    DSC_CLASSIFICACAO_PRESTADOR,
    SGL_UF_PRESTADOR,
   ANO
  , MES
  , ANO_MES
  , BASE 
  , DSC_CARTEIRA_EMPRESA
  , NME_PLANO_AJUSTADO
  , NME_PLANO_AJUSTADO_ATUARIAL,
SUM(TOTAL_SINISTRO_2018) AS TOTAL_SINISTRO_2018,
SUM(TOTAL_SINISTRO_2019) AS TOTAL_SINISTRO_2019,
SUM(TOTAL_SINISTRO_2020) AS TOTAL_SINISTRO_2020,
SUM(TOTAL_SINISTRO_2021) AS TOTAL_SINISTRO_2021,
SUM(TOTAL_SINISTRO_2022) AS TOTAL_SINISTRO_2022,

SUM(TOTAL_QUANTIDADE_2018) AS TOTAL_QUANTIDADE_2018,
SUM(TOTAL_QUANTIDADE_2019) AS TOTAL_QUANTIDADE_2019,
SUM(TOTAL_QUANTIDADE_2020) AS TOTAL_QUANTIDADE_2020,
SUM(TOTAL_QUANTIDADE_2021) AS TOTAL_QUANTIDADE_2021,
SUM(TOTAL_QUANTIDADE_2022) AS TOTAL_QUANTIDADE_2022,

SUM(TOTAL_SINISTRADOS_2018) AS TOTAL_SINISTRADOS_2018,
SUM(TOTAL_SINISTRADOS_2019) AS TOTAL_SINISTRADOS_2019,
SUM(TOTAL_SINISTRADOS_2020) AS TOTAL_SINISTRADOS_2020,
SUM(TOTAL_SINISTRADOS_2021) AS TOTAL_SINISTRADOS_2021,
SUM(TOTAL_SINISTRADOS_2022) AS TOTAL_SINISTRADOS_2022,

-- VAR ABS TOTAL SINISTRO
SUM(TOTAL_SINISTRO_2019) - SUM(TOTAL_SINISTRO_2018) AS VAR_ABS_TOTAL_SINISTRO_19_18,
SUM(TOTAL_SINISTRO_2020) - SUM(TOTAL_SINISTRO_2019) AS VAR_ABS_TOTAL_SINISTRO_20_19,
SUM(TOTAL_SINISTRO_2021) - SUM(TOTAL_SINISTRO_2020) AS VAR_ABS_TOTAL_SINISTRO_21_20,
SUM(TOTAL_SINISTRO_2022) - SUM(TOTAL_SINISTRO_2021) AS VAR_ABS_TOTAL_SINISTRO_22_21,
SUM(TOTAL_SINISTRO_2022) - SUM(TOTAL_SINISTRO_2019) AS VAR_ABS_TOTAL_SINISTRO_22_19,

-- VAR ABS QTD ATENDIMENTO 
SUM(TOTAL_QUANTIDADE_2019) - SUM(TOTAL_QUANTIDADE_2018) AS VAR_ABS_TOTAL_QUANTIDADE_19_18,
SUM(TOTAL_QUANTIDADE_2020) - SUM(TOTAL_QUANTIDADE_2019) AS VAR_ABS_TOTAL_QUANTIDADE_20_19,
SUM(TOTAL_QUANTIDADE_2021) - SUM(TOTAL_QUANTIDADE_2020) AS VAR_ABS_TOTAL_QUANTIDADE_21_20,
SUM(TOTAL_QUANTIDADE_2022) - SUM(TOTAL_QUANTIDADE_2021) AS VAR_ABS_TOTAL_QUANTIDADE_22_21,
SUM(TOTAL_QUANTIDADE_2022) - SUM(TOTAL_QUANTIDADE_2019) AS VAR_ABS_TOTAL_QUANTIDADE_22_19,

-- VAR ABS QTD SINISTRADOS

SUM(TOTAL_SINISTRADOS_2019) - SUM(TOTAL_SINISTRADOS_2018) AS VAR_ABS_TOTAL_SINISTRADOS_19_18,
SUM(TOTAL_SINISTRADOS_2020) - SUM(TOTAL_SINISTRADOS_2019) AS VAR_ABS_TOTAL_SINISTRADOS_20_19,
SUM(TOTAL_SINISTRADOS_2021) - SUM(TOTAL_SINISTRADOS_2020) AS VAR_ABS_TOTAL_SINISTRADOS_21_20,
SUM(TOTAL_SINISTRADOS_2022) - SUM(TOTAL_SINISTRADOS_2021) AS VAR_ABS_TOTAL_SINISTRADOS_22_21,
SUM(TOTAL_SINISTRADOS_2022) - SUM(TOTAL_SINISTRADOS_2019) AS VAR_ABS_TOTAL_SINISTRADOS_22_19,

FROM TABELA2
GROUP BY 1,2,3,4,5,6,7,8,9,10

----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------

--OBSERVAÇÃO IMPORTANTE: NA BASE DE EXPOSTOS, QUE É CRIADA PRIMEIRO NO EXCEL, DEPOIS SUBIMOS PARA O BIGQUERY,
--EXISTE O CÁLCULO DE DE PESO, QUE CALCULA O PERCENTUAL DE EXPOSTOS DE CADA PLANO EM RELAÇÃO 
--AO TOTAL DE EXPOSTOS NAQUELE ANO E NAQUELE MÊS.

--A PHANILHA DO EXCEL ONDE GERAMOS O PESO FICA NO ENDEREÇO C:\Users\la165808\Documents\ATUALIZAÇÃO 
--INDICADORES\EXPOSTOS FINAL2.XLSX.

--DENTRO DO PAINEL DO DATASTUDIO FAZEMOS A JUNÇÃO DA BASE AMBULATORIAL E DA BASE DE INTERNAÇÃO
--COM A COLUNA DE PESO DA PLANILHA DE EXPOSTOS, A CHAVE USADA É A CONCATENAÇÃO DE ANO, MES, CARTEIRA E PLANO

--NA PLANILHA DE EXPOSTOS EXISTEM CHAVES QUE NÃO TEM NAS PLANILHAS AMBULATORIAL E INTERNAÇÃO, POR ISSO,
--INCLUÍMOS NESSAS PLANILHAS TOS OS ANO, MES, CARTEIRA E PLANOS QUE TEM NA BASE DE EXPOSTOS E NÃO TEM NAS
--BASES DE FATURAMENTO AMBULATORIAL E INT.

--PARA REALIZAR ESSA INCLUSÃO CRIAMOS O ARQUIVO ABAIXO
--C:\Users\la165808\Documents\ATUALIZAÇÃO INDICADORES\inclusao anomescartplano.XLSX
--O MESMO POSSUI UMA ABA COM TODAS AS COLUNAS DA BASE AMBULATORIAL, E OUTRA COM AS DA INTERNAÇÃO,
--PORÉM, TODAS AS COLUNAS SÃO VAZIAS, EXCETO ANO, MES, CARTEIRA E PLANO

--DEPOIS DE CRIAR ESSE ARQUIVO, FAZEMOS O UNION ALL DA BASE AMBULATORIAL E INT COM ESSE ARQUIVO,
--PARA QUE ESSAS BASES CONTENHA TODAS AS CHAVES QUE EXISTE NA PLANILHA DE EXPOSTOS

--ABAIXO A QUERIE PARA REALZAR ESSA JUNÇÃO AMBULATORIAL


------------UNION PARA INCLUIR ANOMESCARTPLANO NA BASE AMBULATORIAL------------------------------------




CREATE OR REPLACE TABLE `self-service-saude.SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TOTAL_ANALISE_DOR_DATASTUDIO`as

SELECT 
CAST(DSC_FAIXA_ETARIA_BENEFICIARIO AS STRING) as DSC_FAIXA_ETARIA_BENEFICIARIO,
CAST(DSC_CLASSIFICACAO_PRESTADOR AS STRING) AS DSC_CLASSIFICACAO_PRESTADOR,
CAST(SGL_UF_PRESTADOR AS STRING) as SGL_UF_PRESTADOR,
CAST(ANO AS STRING) as ANO,
CAST(MES AS STRING) AS MES,
CAST(ANO_MES AS STRING) AS ANO_MES,
CAST(BASE AS STRING) AS BASE,
CAST(DSC_CARTEIRA_EMPRESA AS STRING) AS DSC_CARTEIRA_EMPRESA,
CAST(NME_PLANO_AJUSTADO AS STRING) AS NME_PLANO_AJUSTADO,
CAST(NME_PLANO_AJUSTADO_ATUARIAL AS STRING) AS NME_PLANO_AJUSTADO_ATUARIAL,
CAST(TOTAL_SINISTRO_2018 AS NUMERIC) AS TOTAL_SINISTRO_2018,
CAST(TOTAL_SINISTRO_2019 AS NUMERIC) AS TOTAL_SINISTRO_2019,
CAST(TOTAL_SINISTRO_2020 AS NUMERIC) AS TOTAL_SINISTRO_2020,
CAST(TOTAL_SINISTRO_2021 AS NUMERIC) AS TOTAL_SINISTRO_2021,
CAST(TOTAL_SINISTRO_2022 AS NUMERIC) AS TOTAL_SINISTRO_2022,
CAST(TOTAL_QUANTIDADE_2018 AS INTEGER) AS TOTAL_QUANTIDADE_2018,
CAST(TOTAL_QUANTIDADE_2019 AS INTEGER) AS TOTAL_QUANTIDADE_2019,
CAST(TOTAL_QUANTIDADE_2020 AS INTEGER) AS TOTAL_QUANTIDADE_2020,
CAST(TOTAL_QUANTIDADE_2021 AS INTEGER) AS TOTAL_QUANTIDADE_2021,
CAST(TOTAL_QUANTIDADE_2022 AS INTEGER) AS TOTAL_QUANTIDADE_2022,
CAST(TOTAL_SINISTRADOS_2018 AS INTEGER) AS TOTAL_SINISTRADOS_2018,
CAST(TOTAL_SINISTRADOS_2019 AS INTEGER) AS TOTAL_SINISTRADOS_2019,
CAST(TOTAL_SINISTRADOS_2020 AS INTEGER) AS TOTAL_SINISTRADOS_2020,
CAST(TOTAL_SINISTRADOS_2021 AS INTEGER) AS TOTAL_SINISTRADOS_2021,
CAST(TOTAL_SINISTRADOS_2022 AS INTEGER) AS TOTAL_SINISTRADOS_2022,
CAST(VAR_ABS_TOTAL_SINISTRO_19_18 AS NUMERIC) AS VAR_ABS_TOTAL_SINISTRO_19_18,
CAST(VAR_ABS_TOTAL_SINISTRO_20_19 AS NUMERIC) AS VAR_ABS_TOTAL_SINISTRO_20_19,
CAST(VAR_ABS_TOTAL_SINISTRO_21_20 AS NUMERIC) AS VAR_ABS_TOTAL_SINISTRO_21_20,
CAST(VAR_ABS_TOTAL_SINISTRO_22_21 AS NUMERIC) AS VAR_ABS_TOTAL_SINISTRO_22_21,
CAST(VAR_ABS_TOTAL_SINISTRO_22_19 AS NUMERIC) AS VAR_ABS_TOTAL_SINISTRO_22_19,
CAST(VAR_ABS_TOTAL_QUANTIDADE_19_18 AS INTEGER) AS VAR_ABS_TOTAL_QUANTIDADE_19_18,
CAST(VAR_ABS_TOTAL_QUANTIDADE_20_19 AS INTEGER) AS VAR_ABS_TOTAL_QUANTIDADE_20_19,
CAST(VAR_ABS_TOTAL_QUANTIDADE_21_20 AS INTEGER) AS VAR_ABS_TOTAL_QUANTIDADE_21_20,
CAST(VAR_ABS_TOTAL_QUANTIDADE_22_21 AS INTEGER) AS VAR_ABS_TOTAL_QUANTIDADE_22_21,
CAST(VAR_ABS_TOTAL_QUANTIDADE_22_19 AS INTEGER) AS VAR_ABS_TOTAL_QUANTIDADE_22_19,
CAST(VAR_ABS_TOTAL_SINISTRADOS_19_18 AS INTEGER) AS VAR_ABS_TOTAL_SINISTRADOS_19_18,
CAST(VAR_ABS_TOTAL_SINISTRADOS_20_19 AS INTEGER) AS VAR_ABS_TOTAL_SINISTRADOS_20_19,
CAST(VAR_ABS_TOTAL_SINISTRADOS_21_20 AS INTEGER) AS VAR_ABS_TOTAL_SINISTRADOS_21_20,
CAST(VAR_ABS_TOTAL_SINISTRADOS_22_21 AS INTEGER) AS VAR_ABS_TOTAL_SINISTRADOS_22_21,
CAST(VAR_ABS_TOTAL_SINISTRADOS_22_19 AS INTEGER) AS VAR_ABS_TOTAL_SINISTRADOS_22_19,
CAST(EXPOSTOS AS FLOAT64) AS EXPOSTOS,

FROM `self-service-saude.SANDBOX_GERAC.EXCEL_TEMPORARIO_AMB`

UNION ALL

SELECT 
DSC_FAIXA_ETARIA_BENEFICIARIO,
DSC_CLASSIFICACAO_PRESTADOR,
SGL_UF_PRESTADOR,
ANO,
MES,
ANO_MES,
BASE,
DSC_CARTEIRA_EMPRESA,
NME_PLANO_AJUSTADO,
NME_PLANO_AJUSTADO_ATUARIAL,
TOTAL_SINISTRO_2018,
TOTAL_SINISTRO_2019,
TOTAL_SINISTRO_2020,
TOTAL_SINISTRO_2021,
TOTAL_SINISTRO_2022,
TOTAL_QUANTIDADE_2018,
TOTAL_QUANTIDADE_2019,
TOTAL_QUANTIDADE_2020,
TOTAL_QUANTIDADE_2021,
TOTAL_QUANTIDADE_2022,
TOTAL_SINISTRADOS_2018,
TOTAL_SINISTRADOS_2019,
TOTAL_SINISTRADOS_2020,
TOTAL_SINISTRADOS_2021,
TOTAL_SINISTRADOS_2022,
VAR_ABS_TOTAL_SINISTRO_19_18,
VAR_ABS_TOTAL_SINISTRO_20_19,
VAR_ABS_TOTAL_SINISTRO_21_20,
VAR_ABS_TOTAL_SINISTRO_22_21,
VAR_ABS_TOTAL_SINISTRO_22_19,
VAR_ABS_TOTAL_QUANTIDADE_19_18,
VAR_ABS_TOTAL_QUANTIDADE_20_19,
VAR_ABS_TOTAL_QUANTIDADE_21_20,
VAR_ABS_TOTAL_QUANTIDADE_22_21,
VAR_ABS_TOTAL_QUANTIDADE_22_19,
VAR_ABS_TOTAL_SINISTRADOS_19_18,
VAR_ABS_TOTAL_SINISTRADOS_20_19,
VAR_ABS_TOTAL_SINISTRADOS_21_20,
VAR_ABS_TOTAL_SINISTRADOS_22_21,
VAR_ABS_TOTAL_SINISTRADOS_22_19,
EXPOSTOS
FROM `self-service-saude.SANDBOX_GERAC.LT_GT_SINISTRO_BASE_TOTAL_ANALISE_DOR_DATASTUDIO`